{"version":3,"sources":["logo.svg","components/UserForm.js","components/UserList.js","components/Users.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","UserForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","e","preventDefault","console","log","fullName","value","addName","setState","isDisabled","handleNameChange","evt","state","_this2","react_default","a","createElement","className","onSubmit","placeholder","type","ref","input","onChange","disabled","Component","UserList","filter","React","createRef","key","deleteName","class","names","map","name","i","temp2","temp","onClick","deleteItem","sv","current","toLowerCase","search","Users","prevState","concat","splice","components_UserForm","components_UserList","App","components_Users","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.279b9c07.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, {Component} from \"react\";\r\nclass UserForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(); // or super(props) ?\r\n  \r\n        this.state = {\r\n            isDisabled: true\r\n        }  \r\n    }\r\n\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        console.log('test');\r\n        console.log('first name:', this.fullName.value);\r\n       \r\n       this.props.addName(this.fullName.value);\r\n       this.fullName.value = '';\r\n \r\n       this.setState({ isDisabled: this.fullName.value== \"\" });\r\n      }\r\n\r\n     \r\n\r\n      handleNameChange = (evt) => {\r\n        this.setState({ isDisabled: this.fullName.value== \"\" });\r\n        \r\n      }\r\n\r\nrender() {\r\n    return(<div className=\"user-form\">\r\n        <form onSubmit={this.handleSubmit}>\r\n\r\n        <input placeholder=\"Name\" type=\"text\" ref={input => this.fullName = input} onChange={this.handleNameChange}/>\r\n          <input type=\"submit\" value=\"Submit\"  disabled={this.state.isDisabled}/>\r\n        </form>\r\n    </div>)\r\n}\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport default UserForm;","import React, {Component} from \"react\";\r\nclass UserList extends Component {\r\n\r\n     deleteItem(key) {\r\n        this.props.deleteName(key);\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.filter = React.createRef();\r\n      }\r\n\r\n\r\n\r\nrender() {\r\n    return(<div className=\"user-list\">\r\n        <input class =\"search\" type=\"text\" placeholder=\"Search\" ref={this.filter} onChange={(e)=>{this.setState({ });}}/>\r\n        <ul>\r\n            {\r\n                this.props.names.map((name,i)=> {\r\n                  console.log(name, i);\r\n                  let temp = <li onClick={()=>this.deleteItem(i)}  key={i}>{name}</li>;\r\n                    let temp2;\r\n                    let sv = \"\";\r\n                    if (this.filter.current!=null) sv = this.filter.current.value;\r\n                    console.log('teeeeeest', sv);\r\n                    if (name.toLowerCase().search(\r\n                        sv.toLowerCase()) !== -1) temp2 = temp;\r\n                  return temp2;\r\n                })\r\n              }\r\n        </ul>\r\n    </div>)\r\n}\r\n}\r\nexport default UserList;","import React, {Component} from \"react\";\r\nimport UserForm from \"./UserForm\";\r\nimport UserList from \"./UserList\";\r\nclass Users extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n            this.state = {\r\n                names: [\r\n                    'Anna',\r\n                    'Marta',\r\n                    'Kasia',\r\n                    \"Jakub\",\r\n\"Jan\",\r\n\"Szymon\",\r\n\"Franciszek\",\r\n\"Filip\",\r\n\"Aleksander\",\r\n\"Mikołaj\",\r\n\"Wojciech\",\r\n\"Kacper\",\r\n\"Adam\",\r\n\"Michał\",\r\n\"Marcel\",\r\n\"Stanisław\",\r\n\"Wiktor\",\r\n\"Piotr\",\r\n\"Igor\",\r\n\"Leon\"\r\n\r\n                ]\r\n            }\r\n           //this.addName = this.addName.bind(this); \r\n    }\r\n\r\n    addName = (name)  => {\r\n\r\n        // let currentNames = this.state.names;\r\n\r\n\r\n        //     currentNames.push(name);\r\n\r\n\r\n        //     this.setState({\r\n        //         names: currentNames\r\n        //     });\r\n        //     console.log(currentNames);\r\n\r\n        this.setState( (prevState) => {\r\n            return({\r\n                names: prevState.names.concat([name])\r\n            })\r\n        });\r\n\r\n            console.log(this.state.names);\r\n    }\r\n\r\n    deleteName = (key) => {\r\n        console.log(key);\r\n\r\n        this.setState( (prevState) => {\r\n            prevState.names.splice(key,1);\r\n            return({\r\n                names: prevState.names\r\n            })\r\n        });\r\n    }\r\n\r\n\r\n    \r\n\r\n\r\nrender() {\r\n    return(<div className=\"users\">\r\n    <h1>User Form</h1>\r\n        <UserForm addName = {this.addName}/>\r\n        <UserList names = {this.state.names} deleteName = {this.deleteName}/>\r\n    </div>)\r\n}\r\n}\r\nexport default Users;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Users from './components/Users'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n\n        <section>\n        <Users />\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}